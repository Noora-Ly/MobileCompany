/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Noora
 */
public class LogIn extends javax.swing.JFrame {
    MobileCompany mobileCompany; 
    /**
     * Creates new form LogIn
     */
    public LogIn() throws PlanException, UserException {
        test();
        initComponents();
    }

    public void test() throws PlanException, UserException{
        mobileCompany = new MobileCompany("Noora", "admin", "admin", 10);
        MobilePhone mobilePhone = new MobilePhone("Galaxy S10", MobileType.Android,8, 500);
        MobilePhone mobilePhone1 = new MobilePhone("Iphone X", MobileType.IOS,4, 500);
        MobilePhone mobilePhone2 = new MobilePhone("LG S50", MobileType.Windows,16, 500);
        MobilePhone mobilePhone3 = new MobilePhone("Iphone X", MobileType.Windows,16, 500);
        
        MobilePlan plan0 = UITools.creatPersonalPlan("OP123",365,mobilePhone,120, 22, new MyDate(2000, 5, 14), "Wollongong");
        MobilePlan plan1 = UITools.creatPersonalPlan("Sara12",374,mobilePhone,30, 38, new MyDate(1999, 4, 34),"Sydney");
        MobilePlan plan2 = UITools.creatPersonalPlan("John342",3615,mobilePhone1,100, 20, new MyDate(2004, 3, 23),"Dubbo");
        MobilePlan plan3 = UITools.creatBusinessPlan("Alex123",384,mobilePhone1,50, 80, new MyDate(2020, 6, 21),20, 123568);
        MobilePlan plan4 = UITools.creatBusinessPlan("Gh546",316,mobilePhone2,20, 30, new MyDate(2021, 7, 29),10, 666555);
        MobilePlan plan5 = UITools.creatBusinessPlan("S9845",3264,mobilePhone2,200, 46, new MyDate(2024, 2, 17),200, 222333);
        MobilePlan plan6 = UITools.creatPersonalPlan("jo12",3854,mobilePhone3,32, 38, new MyDate(2015, 4, 34),"Sydney");
        
        User user0 = new User("John", new Address(12, "Princs Hwy", "Fairy Meadow", "Wollongong"),"123");
        User user1 = new User("Sara", new Address(43, "Illawara Avenue", "Gwynneville", "Wollongong"), "123");
        User user2 = new User("Robert", new Address(22, "Edward st", "Coniston", "Wollongong"), "123");
        User user3 = new User("Alex", new Address(330, "Smith st", "Liverpool", "Sydney"), "123");
        User user4 = new User("Joe", new Address(20, "Rose st", "North Sydney", "Sydney"), "123");
        User user5 = new User("Allison", new Address(41, "Grey st", "Monavale", "Melbourne"), "123");
        
        UITools.addPlan(user0.getID(), "123" , user0, plan0);
        UITools.addPlan(user0.getID() , "123" , user0, plan2);
        UITools.addPlan(user0.getID(), "123",user0 , plan6);
      
        UITools.addPlan(user1.getID(), "123" , user1, plan3);
        UITools.addPlan(user1.getID() , "123" , user1, plan5);

        UITools.addPlan(user2.getID(),"123", user2, plan1);
        UITools.addPlan(user2.getID(), "123", user2, plan4);

        UITools.addPlan(user3.getID(), "123",user3, plan3); //direct userID
        UITools.addPlan(user3.getID(), "123",user3, plan1);
        UITools.addPlan(user3.getID(), "123",user3, plan5);
        UITools.addPlan(user4.getID(), "123",user4, plan3);
        UITools.addPlan(user4.getID(), "123",user4, plan2);
        UITools.addPlan(user4.getID(), "123",user4, plan4);

        UITools.addPlan(user5.getID(), "123",user5, plan0);
        UITools.addPlan(user5.getID(), "123",user5, plan1);
        UITools.addPlan(user5.getID(), "123",user5, plan2);
        UITools.addPlan(user5.getID(), "123",user5, plan5);
        
        UITools.addUser(mobileCompany, user3);
        UITools.addUser(mobileCompany, user4);
        UITools.addUser(mobileCompany, user0);
        UITools.addUser(mobileCompany, user1);
        UITools.addUser(mobileCompany, user2);
        UITools.addUser(mobileCompany, user5);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jPopupMenu3 = new javax.swing.JPopupMenu();
        Username = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        LoginButton = new javax.swing.JButton();
        UsernameTextField = new javax.swing.JTextField();
        PasswordTextField = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        FileMenu = new javax.swing.JMenu();
        load = new javax.swing.JCheckBoxMenuItem();
        save = new javax.swing.JCheckBoxMenuItem();
        listOfUsers = new javax.swing.JMenu();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Username.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        Username.setText("Username");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel2.setText("Password");

        LoginButton.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        LoginButton.setForeground(new java.awt.Color(255, 0, 102));
        LoginButton.setText("Login");
        LoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginButtonActionPerformed(evt);
            }
        });

        UsernameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsernameTextFieldActionPerformed(evt);
            }
        });

        PasswordTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                PasswordTextFieldKeyPressed(evt);
            }
        });

        jCheckBox1.setText("jCheckBox1");

        jCheckBox2.setText("jCheckBox2");

        FileMenu.setText("File");
        FileMenu.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                FileMenuMenuSelected(evt);
            }
        });

        load.setSelected(true);
        load.setText("load");
        load.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loadMouseClicked(evt);
            }
        });
        load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadActionPerformed(evt);
            }
        });
        FileMenu.add(load);

        save.setSelected(true);
        save.setText("save");
        save.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveMouseClicked(evt);
            }
        });
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        FileMenu.add(save);

        jMenuBar1.add(FileMenu);

        listOfUsers.setText("List Of Users");
        listOfUsers.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                listOfUsersMenuSelected(evt);
            }
        });
        listOfUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listOfUsersActionPerformed(evt);
            }
        });
        jMenuBar1.add(listOfUsers);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Username, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(UsernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(228, 228, 228)
                        .addComponent(LoginButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(192, 192, 192))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Username, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UsernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(LoginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(108, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void UsernameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsernameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UsernameTextFieldActionPerformed

    private void listOfUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listOfUsersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listOfUsersActionPerformed

    private void listOfUsersMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_listOfUsersMenuSelected
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this,listOfUsers() + "AdminID:admin,Pass:admin " + "I added admin just for marking");
    }//GEN-LAST:event_listOfUsersMenuSelected

    private String listOfUsers(){
        String output = "";
        for(User user : mobileCompany.getUsers().values()){
            output +=("userID: " + user.getUserID() + " - pass: " + user.getPassword() + "\n");
        }
        return output;
    }
    
    private void FileMenuMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_FileMenuMenuSelected

    }//GEN-LAST:event_FileMenuMenuSelected

    private void LoginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginButtonActionPerformed
        // TODO add your handling code here:
        login();
    }//GEN-LAST:event_LoginButtonActionPerformed

    private void PasswordTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PasswordTextFieldKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            login();
        }
    }//GEN-LAST:event_PasswordTextFieldKeyPressed

    private void loadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadActionPerformed
        // TODO add your handling code here:
        try{
            boolean test = mobileCompany.loadTextFile("company");
            if(test){
                JOptionPane.showMessageDialog(this, "Load was successfull");
            }else{
            JOptionPane.showMessageDialog(this, "Load was not successfull");
        }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_loadActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        try{
            boolean test = mobileCompany.saveTextFile("company");
            if(test){
                JOptionPane.showMessageDialog(this, "Save was successfull");
            }else{
            JOptionPane.showMessageDialog(this, "Save was not successfull");
        }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_saveActionPerformed

    private void loadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loadMouseClicked
        // TODO add your handling code here:
        try{
            boolean test = mobileCompany.loadTextFile("company");
            if(test){
                JOptionPane.showMessageDialog(this, "Load was successfull");
            }else{
            JOptionPane.showMessageDialog(this, "Load was not successfull");
        }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_loadMouseClicked

    private void saveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveMouseClicked
        // TODO add your handling code here:
        try{
            boolean test = mobileCompany.saveTextFile("company");
            if(test){
                JOptionPane.showMessageDialog(this, "Save was successfull");
            }else{
            JOptionPane.showMessageDialog(this, "Save was not successfull");
        }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_saveMouseClicked

    public void login(){
        try{ 
          if(mobileCompany.validateAdmin(UsernameTextField.getText(), PasswordTextField.getText())){
              AdminUi admin = new AdminUi(this, mobileCompany);
              admin.setVisible(true);
              this.setVisible(false);
          }
          User user = mobileCompany.validateUser(Integer.parseInt(UsernameTextField.getText()), PasswordTextField.getText());
          PasswordTextField.setText("");
          if(user!= null){
              ArrayList<String> cities = mobileCompany.populateDistinctCityNames();
              Company userUI = new Company(user, this, cities);
              userUI.setVisible(true);
              this.setVisible(false);
          }else{
              JOptionPane.showMessageDialog(this, "Username or Password is Wrong!");
          }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
    }
    
                                  
//    private void passTextKeyPressed(java.awt.event.KeyEvent evt) {                                    
//        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
//            login();
//        }
//    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LogIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LogIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LogIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LogIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new LogIn().setVisible(true);
                } catch (PlanException | UserException ex) {
                    Logger.getLogger(LogIn.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu FileMenu;
    private javax.swing.JButton LoginButton;
    private javax.swing.JTextField PasswordTextField;
    private javax.swing.JLabel Username;
    private javax.swing.JTextField UsernameTextField;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JPopupMenu jPopupMenu3;
    private javax.swing.JMenu listOfUsers;
    private javax.swing.JCheckBoxMenuItem load;
    private javax.swing.JCheckBoxMenuItem save;
    // End of variables declaration//GEN-END:variables
}
